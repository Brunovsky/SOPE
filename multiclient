#!/bin/bash

function callvalgrind {
    valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all "$@"
}

function randint {
    # random between $1 and $2 (both inclusive)
    echo $(($1 + RANDOM % ($2 - $1 + 1)))
}

function randstring {
    # string of $3 numbers between $1 and $2 (both inclusive)
    local s=""
    local counter=$3
    while [ $counter -gt 0 ]
    do
        local digit=$(randint $1 $2)
        s="$s $digit"
        ((counter--))
    done

    echo $s
}

function launchclients {
    # $1 - number of clients
    # $2 - time
    # $3 - 1..number
    # $4 - 1..total
    # $5 - 0..seat
    local counter=$1
    while [ $counter -gt 0 ]
    do
        local time=$2
        local number=$(randint 0 $3)
        local min=$(((2 * $number + 3) / 3))
        local total=$(randint $min $4)
        local string=$(randstring 0 $5 $total)
        ./client "$time" "$number" "$string" >> out.txt 2>&1 & disown
        ((counter--))
    done
}

function launchclients-valgrind {
    # $1 - number of clients
    # $2 - time
    # $3 - 1..number
    # $4 - 1..total
    # $5 - 0..seat
    local counter=$1
    while [ $counter -gt 0 ]
    do
        local time=$2
        local number=$(randint 0 $3)
        local min=$(((2 * $number + 3) / 3))
        local total=$(randint $min $4)
        local string=$(randstring 0 $5 $total)
        callvalgrind ./client "$time" "$number" "$string" >> out.txt 2>&1 & disown
        ((counter--))
    done
}

echo "$@"

# clear out.txt from a previous call
> out.txt

if [[ "$1" = "valgrind" ]]; then
    shift
    launchclients-valgrind "$1" "$2" "$3" "$4" "$5"
else
    launchclients "$1" "$2" "$3" "$4" "$5"
fi

echo "Done"

exit 0
